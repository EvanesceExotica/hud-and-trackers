#custom_playerlist {
	width: max-content !important;
	height: max-content !important;
	background-color: transparent;
	top: unset !important;
	bottom: var(--playerlist-bottom) !important;
	// left: 15px !important; TODO: put this back in
	left: 55% !important; //TODO: Take this out
	transition: bottom 100ms ease-out;
	$main-width: 8rem;
	$main-height: 8rem;

	$small-width: 1.5rem;
	$small-height: 1.5rem;


	&.slide-up {
		bottom: calc(var(--playerlist-height) + var(--playerlist-bottom)) !important;
	}

	.window-header {
		display: none;
	}

	background-color: #7070707a;
	border-top: 1px solid rgba(255, 255, 255, 0.198);
	border-bottom: 1px solid rgba(255, 255, 255, 0.198);
	border-radius: 10px;

	@supports (backdrop-filter: blur()) and (-webkit-backdrop-filter: blur()) {
		backdrop-filter: blur(15px);
	}


	.window-content {
		min-height: fit-content;
		min-width: fit-content;
		flex-direction: column;
		overflow: visible;
		background-color: transparent;
		position: relative;

		.underlay {
			position: absolute !important;
			overflow: hidden;
			min-width: 143px;
			min-height: 143px;
			margin: 0;
			padding: 0;
			width: 100%;
			z-index: -1;
			top: 50%;
			left: 50%;
			transform: translate(-50%, -50%);

			@include ba(after, 100%, 50%, 0, 0, -1) {
				background: linear-gradient(to bottom, transparent 40%, rgba(255, 255, 255, 0.23));
				border-bottom: 1px solid rgba(255, 255, 255, 0.308);
				opacity: 57%;
			}

		}




		// background-color: scale-color(var(--primary-darkest-color), $alpha: -50%);

		.content {
			display: flex;
			flex-direction: row;
			overflow: visible;
			background-color: transparent;
			position: relative;
			--clr-border-shadow: rgba(27, 27, 27, 0.938);
			--clr-border-lighter: rgba(47, 47, 47, 0.938);
			--blur-value: 3px;

			.current-character {
				aspect-ratio: 1/1;
				width: $main-width;
				height: $main-height;
				position: relative;
				background-color: var(--black2);
				cursor: pointer;
				outline: 3px double rgba(255, 255, 255, 0);
				outline-offset: 0px;
				transition: outline-offset 200ms, outline 200ms;


				//white outline effect when selected
				@include ba(after, 105%, 105%, 50%, 50%) {
					-webkit-clip-path: polygon(0 0, 80% 0%, 100% 20%, 99% 100%, 80% 100%, 20% 100%, 0% 80%, 0% 20%);
					clip-path: polygon(0 0, 80% 0%, 100% 20%, 99% 100%, 80% 100%, 20% 100%, 0% 80%, 0% 20%);
					outline: 2px double rgba(255, 255, 255, 0);
					outline-offset: 0;
					transform: scale(0.85) translate(-50%, -50%);
					transform-origin: top left;
					transition: transform 300ms ease-out, outline 300ms ease-out, outline-offset 300ms ease-out;
				}

				//glass edge
				@include ba(before, 100%, 100%, 50%, 50%) {
					// background-color: linear-gradient: (to bottom, rgba(255, 255, 255, 0.20) 25%, transparent 50%,);

					border-top: 1px solid;
					border-bottom: 1px solid;
					border-left: 1px solid;
					border-right: 1px solid;
					border-image: linear-gradient(transparent, rgba(255, 255, 255, 0.329), transparent) 44 repeat stretch;
					-webkit-clip-path: polygon(0 0, 80% 0%, 100% 20%, 99% 100%, 80% 100%, 20% 100%, 0% 80%, 0% 20%);
					clip-path: polygon(0 0, 80% 0%, 100% 20%, 99% 100%, 80% 100%, 20% 100%, 0% 80%, 0% 20%);
					transform: translate(-50%, -50%);
					// transition: transform 300ms ease-out, outline 300ms ease-out, outline-offset 300ms ease-out;
				}





				//for when the character is the current pc, but not selected
				&:not(.selected) {
					>img {
						filter: grayscale(90%);
					}


				}

				>img {
					position: relative;
					-webkit-clip-path: polygon(0 0, 80% 0%, 100% 20%, 99% 100%, 80% 100%, 20% 100%, 0% 80%, 0% 20%);
					clip-path: polygon(0 0, 80% 0%, 100% 20%, 99% 100%, 80% 100%, 20% 100%, 0% 80%, 0% 20%);
					transition: filter 100ms;

					&:hover {}
				}



				// if the character's token is selected
				&.selected {
					outline: 3px double rgba(255, 255, 255, 0.616);
					outline-offset: -8px;

					@include ba(after, 105%, 105%, 50%, 50%) {
						transform-origin: top left;
						transform: scale(1.0) translate(-50%, -50%);
						outline: 3px double rgba(255, 255, 255, 0.603);
						outline-offset: -18px;
					}

					// @include ba(before, 105%, 105%, 50%, 50%) {
					// 	transform-origin: top left;
					// 	transform: scale(1.0) translate(-50%, -50%);
					// }

					>img {
						position: relative;
						box-shadow: inset 0 0 2px 2px var(--shadow-color);

						@include ba(before, 100%, 100%, 0, 0) {
							outline: 2px double white;
							z-index: 2;
						}
					}
				}

				.border-holder {
					position: absolute;
					top: 0;
					left: 0;
					width: 100%;
					height: 100%;
					z-index: 10;

					&.horizontal {
						position: absolute !important;
						border: none;
						width: 100%;
						height: 100%;
						overflow: hidden;

						&:before,
						&:after {
							filter: blur(var(--blur-value));
						}

						@include ba(before, 80%, 80%, 0, 0, 1) {
							border-top: 3px solid var(--clr-border-shadow);
							border-left: 3px solid var(--clr-border-shadow);
							// transform: translate(-50%, -50%) rotate(-45deg);
						}

						@include ba(after, 80%, 80%, 0, 0) {
							border-bottom: 3px solid var(--clr-border-shadow);
							border-right: 3px solid var(--clr-border-shadow);
							top: unset;
							left: 18%;
							bottom: 0;
							// transform: translate(-50%, -50%) rotate(-45deg);
						}
					}

					&.skewed {
						position: absolute !important;
						border: none;
						width: 100%;
						height: 100%;
						overflow: hidden;

						&:before,
						&:after {
							filter: blur(var(--blur-value));
						}

						@include ba(before, 110%, 110%, 52%, 50%, 1) {
							border-left: 3px solid var(--clr-border-lighter);
							transform: translate(-50%, -50%) rotate(-45deg);
						}

						@include ba(after, 112%, 112%, 50%, 50%) {
							border-right: 3px solid var(--clr-border-lighter);
							transform: translate(-50%, -50%) rotate(-45deg);
						}

					}
				}


				//characters this user controls, but not the "current" character
				.otherCharacters {
					.secondary-character {
						cursor: pointer;
						position: absolute;
						border-radius: 50%;
						right: 0;
						bottom: 0;
						width: 2rem;
						height: 2rem;
						background-color: var(--black4);
						border: 2px double cornflowerblue;
						box-shadow: var(--shadow-lower);
						transform: scale(1);
						transition: transform 100ms ease-in, bottom 100ms ease-in;
						z-index: 200;

						&:hover {
							transform: scale(1.25);
						}

						&.selected {
							bottom: 10%;
						}

						&:not(.selected) {
							filter: grayscale(90%);
						}
					}
				}
			}

			.other-users {
				position: absolute;
				left: 100%;
				display: flex;
				flex-direction: column;
				width: fit-content;
				height: $main-height;
				padding: var(--space-unit-teensy);

				// background-color: rgba(0, 0, 0, 0.376);
				backdrop-filter: blur(30%);
				-webkit-backdrop-filter: blur(30%);

				.active-user {
					border-radius: 50%;
					width: $small-width;
					height: $small-height;
					transform: scale(1);
					display: flex;
					align-items: center;
					justify-content: center;
					position: relative;

					.user-detail {
						display: none; //put this back in
						position: absolute;
						top: 0;
						left: 0;
						width: 5rem;
						height: inherit;
						display: flex;
						align-items: center;
						justify-content: flex-end;
						border-top-left-radius: 25%;
						border-bottom-left-radius: 25%;
						border-top-right-radius: 5px;
						border-bottom-right-radius: 5px;
						background-color: $black2;
						transform: scaleX(0);
						transform-origin: left;
						transition: transform 100ms;
						padding: 0.25rem 2rem;

						// z-index: -1;
						.badge {
							width: 2rem;
							height: 2rem;
							align-self: flex-start;
						}
					}

					&:hover {
						cursor: pointer;

						.user-detail {
							transform: scaleX(1);
						}

						//maybe here display a larger version with name &
						//which character they currently have selected n' stuff
					}
				}
			}

		}

		.utility-buttons {
			// padding-top: var(--space-unit-small);
			// padding-bottom: var(--space-unit-teensy);

			button {
				position: absolute;
				top: 0;
				left: 0;
				max-width: $main-width;
				z-index: 10;
			}
		}
	}
}